{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "",
    "Parameters": {
      "AppName": {
        "Type": "String",
        "Description": "App Name."
      },
      "Environment": {
        "Type": "String",
        "Description": "Environment name."
      },
      "NetworkStackParameter": {
        "Type": "String",
        "Description": "The stack name for get all network configuration.",
        "Default": ""
      },
      "ArtifactsBucket": {
        "Type": "String",
        "Description": "Bucket where all artifacts will be saved.",
        "Default": ""
      }
    },
    "Resources": {
      "LmdRole{{cookiecutter.app_name}}": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:PutLogEvents"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "PolicyName": {
                "Fn::Sub": "lambdaLogPermission${AppName}"
              }
            },
            {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ec2:DescribeNetworkInterfaces",
                      "ec2:CreateNetworkInterface",
                      "ec2:DeleteNetworkInterface",
                      "ec2:DescribeInstances",
                      "ec2:AttachNetworkInterface"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "PolicyName": {
                "Fn::Sub": "lambdaVpcPermission${AppName}"
              }
            }
          ]
        }
      },
      "ApiRole{{cookiecutter.app_name}}": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "Path": "/",
          "Policies": [
            {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": "lambda:InvokeFunction",
                    "Resource": "*"
                  }
                ]
              },
              "PolicyName": {
                "Fn::Sub": "ApiInvokeLambdaPermission${appName}"
              }
            },
            {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogGroup",
                      "logs:CreateLogStream",
                      "logs:DescribeLogGroups",
                      "logs:DescribeLogStreams",
                      "logs:PutLogEvents",
                      "logs:GetLogEvents",
                      "logs:FilterLogEvents"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "PolicyName": {
                "Fn::Sub": "ApiLogPermission${AppName}"
              }
            }
          ]
        }
      },
      "Api{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Body": {
            "Fn::Transform": {
              "Name": "AWS::Include",
              "Parameters": {
                "Location": {
                  "Fn::Sub": "s3://${ArtifactsBucket}/api.json"
                }
              }
            }
          },
          "Name": {
            "Fn::Sub": "${Environment}-${appName}"
          },
          "Parameters": {
            "endpointConfigurationTypes": "REGIONAL"
          }
        }
      },
      "DeployApi{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::Deployment",
        "Properties": {
          "RestApiId": {
            "Ref": "Api{{cookiecutter.app_name}}"
          }
        },
        "DeletionPolicy": "Retain"
      },
      "ApiStage{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::Stage",
        "Properties": {
          "RestApiId": {
            "Ref": "Api{{cookiecutter.app_name}}"
          },
          "DeploymentId": {
            "Ref": "DeployApi{{cookiecutter.app_name}}"
          },
          "StageName": {
            "Ref": "Environment"
          }
        }
      },
      "UsagePlan{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::UsagePlan",
        "Properties": {
          "ApiStages": [
            {
              "ApiId": {
                "Ref": "Api{{cookiecutter.app_name}}"
              },
              "Stage": {
                "Ref": "ApiStage{{cookiecutter.app_name}}"
              }
            }
          ],
          "Description": "Custom {{cookiecutter.app_name}} usage plan",
          "Quota": {
            "Limit": 5000,
            "Period": "MONTH"
          },
          "Throttle": {
            "BurstLimit": 200,
            "RateLimit": 100
          },
          "UsagePlanName": {
            "Fn::Sub": "${Environment}-${AppName}-Plan"
          }
        }
      },
      "ApiKey{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::ApiKey",
        "DependsOn": [
          "DeployApi{{cookiecutter.app_name}}",
          "Api{{cookiecutter.app_name}}"
        ],
        "Properties": {
          "Name": {
            "Fn::Sub": "${Environment}-${AppName}-ApiKey"
          },
          "Description": "CloudFormation API Key V1",
          "Enabled": true,
          "StageKeys": [
            {
              "RestApiId": {
                "Ref": "Api{{cookiecutter.app_name}}"
              },
              "StageName": {
                "Ref": "ApiStage{{cookiecutter.app_name}}"
              }
            }
          ]
        }
      },
      "usagePlanKey{{cookiecutter.app_name}}": {
        "Type": "AWS::ApiGateway::UsagePlanKey",
        "Properties": {
          "KeyId": {
            "Ref": "ApiKey{{cookiecutter.app_name}}"
          },
          "KeyType": "API_KEY",
          "UsagePlanId": {
            "Ref": "UsagePlan{{cookiecutter.app_name}}"
          }
        }
      },
      "LayerCore{{cookiecutter.app_name}}": {
        "Type": "AWS::Lambda::LayerVersion",
        "Properties": {
          "CompatibleRuntimes": [
            "python3.9"
          ],
          "Content": "src/layers/core",
          "LayerName": {
            "Fn::Sub": "${Environment}-core"
          }
        }
      }
    }
  }